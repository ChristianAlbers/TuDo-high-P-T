import numpy as np
import matplotlib.pyplot as plt
import TuDo_analytix_dev.XES as XES
import glob

plt.close("all")
plt.ion()
el_path=sorted(glob.glob("XES_elastic_pics/" + "*.tif"))
#path to elastic images or spanish path
spec_path=sorted(glob.glob("XES_spect_pics/" + "*.tif"))
#path to spectra images

test_elastic=XES.XES_elastics(el_path, np.linspace(10530,10710,10))
#generate elastics_object
test_elastic.calc_params()
#calculate params for energy calibration
#default is m=1 and b=0 to see intensity to pixel
test_spect=XES.XES_object(spec_path, test_elastic)
#generate spectrum object

test_spect.auto_rois(distance=10, roiwidth=5)
#get automatic rois by searching the maximum pixels with minimum distance of 10
#rois are maximumpeaks +- the roiwidth
#works for this dataset but needs to be used carefully
#alternative test_spect.rois=[[roi1,roi2],[roi1,roi2],...]
test_spect.show_rois()
#shows rois on summed up detectorimages
test_spect.calc_spectrum_all(roiwidth=5, bgrwidth=3, bgrfit=True)
#calculate spetrum from all images
#background is generated by rois up and down of signalrois
#bgrfit gets polynom fit with order 5
test_spect.check_all_images(roiwidth=5, bgrwidth=3)
#plots all detectorimages with rois and spectra
ref1=test_spect.spectrum>>0.25
ref2=test_spect.spectrum<<0.1
ref3=test_spect.spectrum<<0.3
ref4=test_spect.spectrum>>0.45
test_spect.add_reference(ref1,"ref1")
test_spect.add_reference(ref2,"ref2")
test_spect.add_reference(ref3,"ref3")
test_spect.add_reference(ref4,"ref4")
#add some arbitrary references for testing
fit_marker=[1,1,0,1]
a = test_spect.fit_references(fit_marker=fit_marker,fit_range=(7020,7120),show=True)
#fit spectrum in range fit_area to the spectrum
#only use refs 1, 2 and 4 due to fit_marker

#take, save = test_spect.zoom_rois()